sap.ui.define([
  "budget/controller/BaseController",
  "sap/ui/model/json/JSONModel",
  "sap/ui/core/routing/History",
  "sap/m/MessageBox"
], function(Controller, JSONModel, History, MessageBox) {
  "use strict";
  return Controller.extend("budget.controller.CcDetermination", {
    /**
     * Called when a controller is instantiated and its View controls (if available) are already created.
     * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
     * @memberOf budget.view.CcDetermination
     */
    onInit: function() {

      var oViewModel = new JSONModel({
        busy: true,
        delay: 0,
        deleteVisible: false,
        saveVisible: false,
        saveDialogEnabled: false
      });
      this.setModel(oViewModel, "CCView");
      //			var iOriginalBusyDelay = this.getView().getBusyIndicatorDelay();

      this.getRouter().getRoute("detAffectation").attachPatternMatched(this._onCCMatched, this);

      // 			this.getOwnerComponent().getModel().metadataLoaded().then(function() {
      // 				// Restore original busy indicator delay for the object view
      // 				oViewModel.setProperty("/delay", iOriginalBusyDelay);
      // 			});

    },
    /* =========================================================== */
    /* event handlers                                              */
    /* =========================================================== */
    /**
     * Event handler  for navigating back.
     * It there is a history entry we go one step back in the browser history
     * If not, it will replace the current entry of the browser history with the worklist route.
     * @public
     */
    onNavBack: function() {
      var sPreviousHash = History.getInstance().getPreviousHash();
      if (sPreviousHash !== undefined) {
        history.go(-1);
      } else {
        //	history.go(-1);
        this.getRouter().navTo("worklist", {}, true);
      }
    },
    /**
     *@memberOf budget.controller.CcDetermination
     */
    onAddPress: function() {
      //This code was generated by the layout editor.
      if (!this._newDialog) {
        this._newDialog = sap.ui.xmlfragment(this.getView().getId(), "budget.fragment.newDetermination", this);
        this.getView().addDependent(this._newDialog);
      }
      var oViewModel = this.getModel("CCView");
      oViewModel.setProperty("/saveDialogEnabled", false);
      var oContext = this.getModel().createEntry("Cleaffectations");
      this._newDialog.setBindingContext(oContext);
      this._newDialog.open();
    },
    /**
     *@memberOf budget.controller.CcDetermination
     */
    onRemovePress: function() {
      //This code was generated by the layout editor.
      //This code was generated by the layout editor.
      /** @type sap.ui.table.Table */
      var oTable = this.byId("CCTable");
      //var aContexts = oTable.getBinding("rows").getContexts();// .getRows();
      var aIndex = oTable.getSelectedIndices();
      var iLength = aIndex.length - 1;
      //deleteCreatedEntry
      var oModel = this.getModel();
      aIndex.forEach(function(item, index) {
        if (iLength === index) {
          oModel.remove(oTable.getContextByIndex(item).getPath(), {
            success: this._deleteSuccess.bind(this)
          });
        } else {
          oModel.remove(oTable.getContextByIndex(item).getPath());
        }
      }, this);
      oTable.removeSelectionInterval(0, 150);
    },

    onAffectationChange: function() {
      //This code was generated by the layout editor.
      this.getModel("CCView").setProperty("/saveVisible", this.getModel().hasPendingChanges() ? true : false);
      // if (this.getModel().hasPendingChanges()) {
      // 	this.getModel("CCView").setProperty("/saveVisible", true);

      // }
    },

    onSelectionTableChange: function() {
      var aRows = this.byId("CCTable").getSelectedIndices();
      this.getModel("CCView").setProperty("/deleteVisible", aRows.length > 0 ? true : false);
    },

    onSavePress: function() {
      var oModel = this.getModel();

      if (oModel.hasPendingChanges()) {
        oModel.submitChanges();
        this.getModel("CCView").setProperty("/saveVisible", false);
      }
    },

    onDialogSave: function() {
      var oOdataModel = this.getModel();
      oOdataModel.submitChanges();
      this._newDialog.close();
      oOdataModel.refresh();
    },

    onDialogCancel: function() {
      MessageBox.confirm("Are you sur you want to Cancel?", {
        //	styleClass: oComponent.getContentDensityClass(),
        onClose: function(oAction) {
          if (oAction === sap.m.MessageBox.Action.OK) {
            this.getModel().resetChanges();
            this._newDialog.close();
          }
        }.bind(this)
      });
    },

    onFormChange: function() {
      var aInputControls = this._getFormFields(this.byId("CCform"));
      var oControl, bError = false;
      aInputControls.forEach(function(item, index) {
        oControl = item.control;
        var sValue;
        if (item.required) {
          if (oControl.getValue) {
            sValue = oControl.getValue();
          } else {
            sValue = oControl.getSelectedKey();
          }
          if (!sValue) {
            bError = true;
            return;
          }
        }
      }, this);
      this._newDialog.getModel("CCView").setProperty("/saveDialogEnabled", !bError);
    },
    /* ===========================================================
    /* internal methods                                            */
    /* =========================================================== */
    /**
     * Set Busy Dialog for table.
     * @function
     * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'
     * @private
     */

    _onCCMatched: function() {

      this._initBindingEventHandler();

    },

    _initBindingEventHandler: function() {
      if (!this.oBusyIndicator) {
        var oTable = this.byId("CCTable");
        this.oBusyIndicator = oTable.getNoData();
        var oBinding = oTable.getBinding("rows");
        oBinding.attachDataRequested(function() {
          oTable.setNoData(this.oBusyIndicator);
        });
        oBinding.attachDataReceived(function(oEvent) {
          //	var oData = oEvent.getParameter("data");
          oTable.setNoData(null);
        });
      }
    },

    _deleteSuccess: function() {
      this.getModel().refresh();
    },

    _getFormFields: function(oSimpleForm) {
      var aControls = [];
      var aFormContent = oSimpleForm.getContent();
      var sControlType;
      for (var i = 0; i < aFormContent.length; i++) {
        sControlType = aFormContent[i].getMetadata().getName();
        if (sControlType === "sap.m.Input" || sControlType === "sap.m.DatePicker" || sControlType === "sap.m.ComboBox") {
          aControls.push({
            control: aFormContent[i],
            required: aFormContent[i - 1].getRequired && aFormContent[i - 1].getRequired()
          });
        }
      }
      return aControls;
    }

  });
});